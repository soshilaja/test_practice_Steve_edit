// SPEC: 
// Build a function that counts the number of instances of a word in a sentence.
// The function should take in two parameters, a sentence as string and a specified word as a string 
// and goes through the sentence parameter and counts the number of instances this specified word appears in the sentence. 
// The function returns the number of times it appears in the string. 
// If it appears 0 times it returns 0, if the sentence string is empty it returns null. 
// For example, return 2 for the number of "and" in a sentence such as "He was tall and thin and angry."

// TEST
it('Test the number of instance of a word in a given String', () => {
    // MOCKED FUNCTION
    const mockCallback = jest.fn((string, word) => {
        if ((string !== null && string !== '') && (word !== null && word === 'and')) {
            return 2;
        }
        else if (word === null || word === 'NoSense') {
            return 0;
        }
        else {
            return null;
        }
    });

    expect(mockCallback("He was tall and thin and angry.", "and")).toBe(2);
    expect(mockCallback("He was tall and thin and angry.", "and")).not.toBe(0);

    expect(mockCallback("He was tall and thin and angry.", null)).toBe(0);

    expect(mockCallback("He was tall and thin and angry.", "NoSense")).toBe(0);

    expect(mockCallback("", "Hi")).not.toBe(2);
    expect(mockCallback("", "and")).not.toBe(2);
    expect(mockCallback("", "and")).toBe(null);
});